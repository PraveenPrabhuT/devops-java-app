name: Auto Tag & Release

on:
  workflow_dispatch:

permissions:
  contents: write


jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate changelog from commits
        id: changelog
        run: |
          latest_tag="${{ steps.get_tag.outputs.tag }}"
          if git rev-parse "$latest_tag" >/dev/null 2>&1; then
            changelog=$(git log "$latest_tag"..HEAD --pretty=format:"- %s (%an)" --no-merges)
          else
            changelog=$(git log --pretty=format:"- %s (%an)" --no-merges)
          fi
          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Set up Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          latest=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $latest"
          echo "tag=$latest" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump
        run: |
          tag="${{ steps.get_tag.outputs.tag }}"
          version="${tag#v}" # remove 'v' prefix
          IFS='.' read -r major minor patch <<< "$version"
          new_tag="v$major.$minor.$((patch + 1))"
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Generate changelog from commits
        id: generate_changelog
        run: |
          latest_tag="${{ steps.get_tag.outputs.tag }}"
          if git rev-parse "$latest_tag" >/dev/null 2>&1; then
            notes=$(git log "$latest_tag"..HEAD --pretty=format:"- %s (%an)" --no-merges)
          else
            notes=$(git log --pretty=format:"- %s (%an)" --no-merges)
          fi
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Create Git tag
        run: |
          git tag ${{ steps.bump.outputs.new_tag }}
          git push origin ${{ steps.bump.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: Release ${{ steps.bump.outputs.new_tag }}
          body: ${{ env.RELEASE_NOTES }}
